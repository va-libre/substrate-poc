
//! Autogenerated weights for `pallet_communities`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-04-08, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `virto-builder`, CPU: `Intel(R) Xeon(R) Silver 4216 CPU @ 2.10GHz`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("kreivo-local")`, DB CACHE: 1024

// Executed Command:
// ./target/release/virto-node
// benchmark
// pallet
// --chain
// kreivo-local
// --pallet
// pallet_communities
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output
// runtime/kreivo/src/weights/pallet_communities.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions needed for pallet_communities.
pub trait WeightInfo {
	fn create() -> Weight;
	fn set_metadata(n: u32, d: u32, u: u32) -> Weight;
	fn add_member() -> Weight;
	fn promote() -> Weight;
	fn demote() -> Weight;
	fn remove_member() -> Weight;
	fn set_decision_method () -> Weight;
	fn vote() -> Weight;
	fn remove_vote() -> Weight;
	fn unlock() -> Weight;
	fn dispatch_as_account() -> Weight;
}

/// Weights for pallet_communities using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	/// Storage: `Communities::Info` (r:1 w:1)
	/// Proof: `Communities::Info` (`max_values`: None, `max_size`: Some(19), added: 2494, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Communities::CommunityIdFor` (r:0 w:1)
	/// Proof: `Communities::CommunityIdFor` (`max_values`: None, `max_size`: Some(622), added: 3097, mode: `MaxEncodedLen`)
	fn create() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `56`
		//  Estimated: `3593`
		// Minimum execution time: 55_549_000 picoseconds.
		Weight::from_parts(56_676_000, 0)
			.saturating_add(Weight::from_parts(0, 3593))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Communities::Metadata` (r:1 w:1)
	/// Proof: `Communities::Metadata` (`max_values`: None, `max_size`: Some(600), added: 3075, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 64]`.
	/// The range of component `d` is `[1, 256]`.
	/// The range of component `u` is `[1, 256]`.
	fn set_metadata(_n: u32, d: u32, _u: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `75`
		//  Estimated: `4065`
		// Minimum execution time: 22_518_000 picoseconds.
		Weight::from_parts(34_920_208, 0)
			.saturating_add(Weight::from_parts(0, 4065))
			// Standard Error: 789
			.saturating_add(Weight::from_parts(1_595, 0).saturating_mul(d.into()))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Communities::CommunityDecisionMethod` (r:0 w:1)
	/// Proof: `Communities::CommunityDecisionMethod` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	fn set_decision_method() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 21_329_000 picoseconds.
		Weight::from_parts(22_468_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: `Communities::Info` (r:1 w:0)
	/// Proof: `Communities::Info` (`max_values`: None, `max_size`: Some(19), added: 2494, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Account` (r:1 w:2)
	/// Proof: `CommunityMemberships::Account` (`max_values`: None, `max_size`: Some(86), added: 2561, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Attribute` (r:3 w:2)
	/// Proof: `CommunityMemberships::Attribute` (`max_values`: None, `max_size`: Some(477), added: 2952, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemConfigOf` (r:2 w:2)
	/// Proof: `CommunityMemberships::ItemConfigOf` (`max_values`: None, `max_size`: Some(46), added: 2521, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Collection` (r:2 w:2)
	/// Proof: `CommunityMemberships::Collection` (`max_values`: None, `max_size`: Some(82), added: 2557, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Item` (r:2 w:2)
	/// Proof: `CommunityMemberships::Item` (`max_values`: None, `max_size`: Some(859), added: 3334, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemMetadataOf` (r:1 w:0)
	/// Proof: `CommunityMemberships::ItemMetadataOf` (`max_values`: None, `max_size`: Some(345), added: 2820, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::CollectionConfigOf` (r:1 w:0)
	/// Proof: `CommunityMemberships::CollectionConfigOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemPriceOf` (r:0 w:1)
	/// Proof: `CommunityMemberships::ItemPriceOf` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `CommunityMemberships::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(999), added: 3474, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::PendingSwapOf` (r:0 w:1)
	/// Proof: `CommunityMemberships::PendingSwapOf` (`max_values`: None, `max_size`: Some(67), added: 2542, mode: `MaxEncodedLen`)
	fn add_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1123`
		//  Estimated: `9846`
		// Minimum execution time: 437_134_000 picoseconds.
		Weight::from_parts(447_852_000, 0)
			.saturating_add(Weight::from_parts(0, 9846))
			.saturating_add(T::DbWeight::get().reads(15))
			.saturating_add(T::DbWeight::get().writes(15))
	}
	/// Storage: `Communities::Info` (r:1 w:0)
	/// Proof: `Communities::Info` (`max_values`: None, `max_size`: Some(19), added: 2494, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Account` (r:1 w:1)
	/// Proof: `CommunityMemberships::Account` (`max_values`: None, `max_size`: Some(86), added: 2561, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Attribute` (r:3 w:2)
	/// Proof: `CommunityMemberships::Attribute` (`max_values`: None, `max_size`: Some(477), added: 2952, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Collection` (r:1 w:1)
	/// Proof: `CommunityMemberships::Collection` (`max_values`: None, `max_size`: Some(82), added: 2557, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemConfigOf` (r:1 w:1)
	/// Proof: `CommunityMemberships::ItemConfigOf` (`max_values`: None, `max_size`: Some(46), added: 2521, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Item` (r:1 w:1)
	/// Proof: `CommunityMemberships::Item` (`max_values`: None, `max_size`: Some(859), added: 3334, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemMetadataOf` (r:1 w:0)
	/// Proof: `CommunityMemberships::ItemMetadataOf` (`max_values`: None, `max_size`: Some(345), added: 2820, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemPriceOf` (r:0 w:1)
	/// Proof: `CommunityMemberships::ItemPriceOf` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `CommunityMemberships::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(999), added: 3474, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::PendingSwapOf` (r:0 w:1)
	/// Proof: `CommunityMemberships::PendingSwapOf` (`max_values`: None, `max_size`: Some(67), added: 2542, mode: `MaxEncodedLen`)
	fn remove_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1146`
		//  Estimated: `9846`
		// Minimum execution time: 423_215_000 picoseconds.
		Weight::from_parts(438_281_000, 0)
			.saturating_add(Weight::from_parts(0, 9846))
			.saturating_add(T::DbWeight::get().reads(10))
			.saturating_add(T::DbWeight::get().writes(10))
	}
	/// Storage: `Communities::Info` (r:1 w:0)
	/// Proof: `Communities::Info` (`max_values`: None, `max_size`: Some(19), added: 2494, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Attribute` (r:2 w:2)
	/// Proof: `CommunityMemberships::Attribute` (`max_values`: None, `max_size`: Some(477), added: 2952, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Collection` (r:1 w:1)
	/// Proof: `CommunityMemberships::Collection` (`max_values`: None, `max_size`: Some(82), added: 2557, mode: `MaxEncodedLen`)
	fn promote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `717`
		//  Estimated: `6894`
		// Minimum execution time: 208_110_000 picoseconds.
		Weight::from_parts(212_825_000, 0)
			.saturating_add(Weight::from_parts(0, 6894))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Communities::Info` (r:1 w:0)
	/// Proof: `Communities::Info` (`max_values`: None, `max_size`: Some(19), added: 2494, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Attribute` (r:2 w:2)
	/// Proof: `CommunityMemberships::Attribute` (`max_values`: None, `max_size`: Some(477), added: 2952, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Collection` (r:1 w:1)
	/// Proof: `CommunityMemberships::Collection` (`max_values`: None, `max_size`: Some(82), added: 2557, mode: `MaxEncodedLen`)
	fn demote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `717`
		//  Estimated: `6894`
		// Minimum execution time: 207_928_000 picoseconds.
		Weight::from_parts(218_116_000, 0)
			.saturating_add(Weight::from_parts(0, 6894))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `CommunityMemberships::Account` (r:1 w:0)
	/// Proof: `CommunityMemberships::Account` (`max_values`: None, `max_size`: Some(86), added: 2561, mode: `MaxEncodedLen`)
	/// Storage: `CommunityReferenda::ReferendumInfoFor` (r:1 w:1)
	/// Proof: `CommunityReferenda::ReferendumInfoFor` (`max_values`: None, `max_size`: Some(900), added: 3375, mode: `MaxEncodedLen`)
	/// Storage: `Communities::CommunityDecisionMethod` (r:1 w:0)
	/// Proof: `Communities::CommunityDecisionMethod` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Attribute` (r:1 w:0)
	/// Proof: `CommunityMemberships::Attribute` (`max_values`: None, `max_size`: Some(477), added: 2952, mode: `MaxEncodedLen`)
	/// Storage: `Communities::CommunityVotes` (r:1 w:1)
	/// Proof: `Communities::CommunityVotes` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Scheduler::Agenda` (r:2 w:2)
	/// Proof: `Scheduler::Agenda` (`max_values`: None, `max_size`: Some(155814), added: 158289, mode: `MaxEncodedLen`)
	fn vote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2892`
		//  Estimated: `317568`
		// Minimum execution time: 213_100_000 picoseconds.
		Weight::from_parts(268_914_000, 0)
			.saturating_add(Weight::from_parts(0, 317568))
			.saturating_add(T::DbWeight::get().reads(7))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `CommunityMemberships::Account` (r:1 w:0)
	/// Proof: `CommunityMemberships::Account` (`max_values`: None, `max_size`: Some(86), added: 2561, mode: `MaxEncodedLen`)
	/// Storage: `CommunityReferenda::ReferendumInfoFor` (r:1 w:1)
	/// Proof: `CommunityReferenda::ReferendumInfoFor` (`max_values`: None, `max_size`: Some(900), added: 3375, mode: `MaxEncodedLen`)
	/// Storage: `Communities::CommunityVotes` (r:1 w:1)
	/// Proof: `Communities::CommunityVotes` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Communities::CommunityDecisionMethod` (r:1 w:0)
	/// Proof: `Communities::CommunityDecisionMethod` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Attribute` (r:1 w:0)
	/// Proof: `CommunityMemberships::Attribute` (`max_values`: None, `max_size`: Some(477), added: 2952, mode: `MaxEncodedLen`)
	fn remove_vote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2894`
		//  Estimated: `4365`
		// Minimum execution time: 176_517_000 picoseconds.
		Weight::from_parts(220_787_000, 0)
			.saturating_add(Weight::from_parts(0, 4365))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: `CommunityReferenda::ReferendumInfoFor` (r:1 w:0)
	/// Proof: `CommunityReferenda::ReferendumInfoFor` (`max_values`: None, `max_size`: Some(900), added: 3375, mode: `MaxEncodedLen`)
	/// Storage: `Communities::CommunityVotes` (r:1 w:1)
	/// Proof: `Communities::CommunityVotes` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:1)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(5682), added: 8157, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:0)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	fn unlock() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1046`
		//  Estimated: `9147`
		// Minimum execution time: 128_897_000 picoseconds.
		Weight::from_parts(170_404_000, 0)
			.saturating_add(Weight::from_parts(0, 9147))
			.saturating_add(T::DbWeight::get().reads(5))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: `Communities::Info` (r:1 w:0)
	/// Proof: `Communities::Info` (`max_values`: None, `max_size`: Some(19), added: 2494, mode: `MaxEncodedLen`)
	fn dispatch_as_account() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `115`
		//  Estimated: `3484`
		// Minimum execution time: 36_477_000 picoseconds.
		Weight::from_parts(48_974_000, 0)
			.saturating_add(Weight::from_parts(0, 3484))
			.saturating_add(T::DbWeight::get().reads(1))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	/// Storage: `Communities::Info` (r:1 w:1)
	/// Proof: `Communities::Info` (`max_values`: None, `max_size`: Some(19), added: 2494, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Communities::CommunityIdFor` (r:0 w:1)
	/// Proof: `Communities::CommunityIdFor` (`max_values`: None, `max_size`: Some(622), added: 3097, mode: `MaxEncodedLen`)
	fn create() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `56`
		//  Estimated: `3593`
		// Minimum execution time: 55_549_000 picoseconds.
		Weight::from_parts(56_676_000, 0)
			.saturating_add(Weight::from_parts(0, 3593))
			.saturating_add(RocksDbWeight::get().reads(2))
			.saturating_add(RocksDbWeight::get().writes(3))
	}
	/// Storage: `Communities::Metadata` (r:1 w:1)
	/// Proof: `Communities::Metadata` (`max_values`: None, `max_size`: Some(600), added: 3075, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[1, 64]`.
	/// The range of component `d` is `[1, 256]`.
	/// The range of component `u` is `[1, 256]`.
	fn set_metadata(_n: u32, d: u32, _u: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `75`
		//  Estimated: `4065`
		// Minimum execution time: 22_518_000 picoseconds.
		Weight::from_parts(34_920_208, 0)
			.saturating_add(Weight::from_parts(0, 4065))
			// Standard Error: 789
			.saturating_add(Weight::from_parts(1_595, 0).saturating_mul(d.into()))
			.saturating_add(RocksDbWeight::get().reads(1))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	/// Storage: `Communities::CommunityDecisionMethod` (r:0 w:1)
	/// Proof: `Communities::CommunityDecisionMethod` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	fn set_decision_method() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 21_329_000 picoseconds.
		Weight::from_parts(22_468_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
			.saturating_add(RocksDbWeight::get().writes(1))
	}
	/// Storage: `Communities::Info` (r:1 w:0)
	/// Proof: `Communities::Info` (`max_values`: None, `max_size`: Some(19), added: 2494, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Account` (r:1 w:2)
	/// Proof: `CommunityMemberships::Account` (`max_values`: None, `max_size`: Some(86), added: 2561, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Attribute` (r:3 w:2)
	/// Proof: `CommunityMemberships::Attribute` (`max_values`: None, `max_size`: Some(477), added: 2952, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemConfigOf` (r:2 w:2)
	/// Proof: `CommunityMemberships::ItemConfigOf` (`max_values`: None, `max_size`: Some(46), added: 2521, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Collection` (r:2 w:2)
	/// Proof: `CommunityMemberships::Collection` (`max_values`: None, `max_size`: Some(82), added: 2557, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Item` (r:2 w:2)
	/// Proof: `CommunityMemberships::Item` (`max_values`: None, `max_size`: Some(859), added: 3334, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:2 w:2)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemMetadataOf` (r:1 w:0)
	/// Proof: `CommunityMemberships::ItemMetadataOf` (`max_values`: None, `max_size`: Some(345), added: 2820, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::CollectionConfigOf` (r:1 w:0)
	/// Proof: `CommunityMemberships::CollectionConfigOf` (`max_values`: None, `max_size`: Some(69), added: 2544, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemPriceOf` (r:0 w:1)
	/// Proof: `CommunityMemberships::ItemPriceOf` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `CommunityMemberships::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(999), added: 3474, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::PendingSwapOf` (r:0 w:1)
	/// Proof: `CommunityMemberships::PendingSwapOf` (`max_values`: None, `max_size`: Some(67), added: 2542, mode: `MaxEncodedLen`)
	fn add_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1123`
		//  Estimated: `9846`
		// Minimum execution time: 437_134_000 picoseconds.
		Weight::from_parts(447_852_000, 0)
			.saturating_add(Weight::from_parts(0, 9846))
			.saturating_add(RocksDbWeight::get().reads(15))
			.saturating_add(RocksDbWeight::get().writes(15))
	}
	/// Storage: `Communities::Info` (r:1 w:0)
	/// Proof: `Communities::Info` (`max_values`: None, `max_size`: Some(19), added: 2494, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Account` (r:1 w:1)
	/// Proof: `CommunityMemberships::Account` (`max_values`: None, `max_size`: Some(86), added: 2561, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Attribute` (r:3 w:2)
	/// Proof: `CommunityMemberships::Attribute` (`max_values`: None, `max_size`: Some(477), added: 2952, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Collection` (r:1 w:1)
	/// Proof: `CommunityMemberships::Collection` (`max_values`: None, `max_size`: Some(82), added: 2557, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemConfigOf` (r:1 w:1)
	/// Proof: `CommunityMemberships::ItemConfigOf` (`max_values`: None, `max_size`: Some(46), added: 2521, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Item` (r:1 w:1)
	/// Proof: `CommunityMemberships::Item` (`max_values`: None, `max_size`: Some(859), added: 3334, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemMetadataOf` (r:1 w:0)
	/// Proof: `CommunityMemberships::ItemMetadataOf` (`max_values`: None, `max_size`: Some(345), added: 2820, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemPriceOf` (r:0 w:1)
	/// Proof: `CommunityMemberships::ItemPriceOf` (`max_values`: None, `max_size`: Some(87), added: 2562, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::ItemAttributesApprovalsOf` (r:0 w:1)
	/// Proof: `CommunityMemberships::ItemAttributesApprovalsOf` (`max_values`: None, `max_size`: Some(999), added: 3474, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::PendingSwapOf` (r:0 w:1)
	/// Proof: `CommunityMemberships::PendingSwapOf` (`max_values`: None, `max_size`: Some(67), added: 2542, mode: `MaxEncodedLen`)
	fn remove_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1146`
		//  Estimated: `9846`
		// Minimum execution time: 423_215_000 picoseconds.
		Weight::from_parts(438_281_000, 0)
			.saturating_add(Weight::from_parts(0, 9846))
			.saturating_add(RocksDbWeight::get().reads(10))
			.saturating_add(RocksDbWeight::get().writes(10))
	}
	/// Storage: `Communities::Info` (r:1 w:0)
	/// Proof: `Communities::Info` (`max_values`: None, `max_size`: Some(19), added: 2494, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Attribute` (r:2 w:2)
	/// Proof: `CommunityMemberships::Attribute` (`max_values`: None, `max_size`: Some(477), added: 2952, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Collection` (r:1 w:1)
	/// Proof: `CommunityMemberships::Collection` (`max_values`: None, `max_size`: Some(82), added: 2557, mode: `MaxEncodedLen`)
	fn promote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `717`
		//  Estimated: `6894`
		// Minimum execution time: 208_110_000 picoseconds.
		Weight::from_parts(212_825_000, 0)
			.saturating_add(Weight::from_parts(0, 6894))
			.saturating_add(RocksDbWeight::get().reads(4))
			.saturating_add(RocksDbWeight::get().writes(3))
	}
	/// Storage: `Communities::Info` (r:1 w:0)
	/// Proof: `Communities::Info` (`max_values`: None, `max_size`: Some(19), added: 2494, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Attribute` (r:2 w:2)
	/// Proof: `CommunityMemberships::Attribute` (`max_values`: None, `max_size`: Some(477), added: 2952, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Collection` (r:1 w:1)
	/// Proof: `CommunityMemberships::Collection` (`max_values`: None, `max_size`: Some(82), added: 2557, mode: `MaxEncodedLen`)
	fn demote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `717`
		//  Estimated: `6894`
		// Minimum execution time: 207_928_000 picoseconds.
		Weight::from_parts(218_116_000, 0)
			.saturating_add(Weight::from_parts(0, 6894))
			.saturating_add(RocksDbWeight::get().reads(4))
			.saturating_add(RocksDbWeight::get().writes(3))
	}
	/// Storage: `CommunityMemberships::Account` (r:1 w:0)
	/// Proof: `CommunityMemberships::Account` (`max_values`: None, `max_size`: Some(86), added: 2561, mode: `MaxEncodedLen`)
	/// Storage: `CommunityReferenda::ReferendumInfoFor` (r:1 w:1)
	/// Proof: `CommunityReferenda::ReferendumInfoFor` (`max_values`: None, `max_size`: Some(900), added: 3375, mode: `MaxEncodedLen`)
	/// Storage: `Communities::CommunityDecisionMethod` (r:1 w:0)
	/// Proof: `Communities::CommunityDecisionMethod` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Attribute` (r:1 w:0)
	/// Proof: `CommunityMemberships::Attribute` (`max_values`: None, `max_size`: Some(477), added: 2952, mode: `MaxEncodedLen`)
	/// Storage: `Communities::CommunityVotes` (r:1 w:1)
	/// Proof: `Communities::CommunityVotes` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Scheduler::Agenda` (r:2 w:2)
	/// Proof: `Scheduler::Agenda` (`max_values`: None, `max_size`: Some(155814), added: 158289, mode: `MaxEncodedLen`)
	fn vote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2892`
		//  Estimated: `317568`
		// Minimum execution time: 213_100_000 picoseconds.
		Weight::from_parts(268_914_000, 0)
			.saturating_add(Weight::from_parts(0, 317568))
			.saturating_add(RocksDbWeight::get().reads(7))
			.saturating_add(RocksDbWeight::get().writes(4))
	}
	/// Storage: `CommunityMemberships::Account` (r:1 w:0)
	/// Proof: `CommunityMemberships::Account` (`max_values`: None, `max_size`: Some(86), added: 2561, mode: `MaxEncodedLen`)
	/// Storage: `CommunityReferenda::ReferendumInfoFor` (r:1 w:1)
	/// Proof: `CommunityReferenda::ReferendumInfoFor` (`max_values`: None, `max_size`: Some(900), added: 3375, mode: `MaxEncodedLen`)
	/// Storage: `Communities::CommunityVotes` (r:1 w:1)
	/// Proof: `Communities::CommunityVotes` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Communities::CommunityDecisionMethod` (r:1 w:0)
	/// Proof: `Communities::CommunityDecisionMethod` (`max_values`: None, `max_size`: Some(36), added: 2511, mode: `MaxEncodedLen`)
	/// Storage: `CommunityMemberships::Attribute` (r:1 w:0)
	/// Proof: `CommunityMemberships::Attribute` (`max_values`: None, `max_size`: Some(477), added: 2952, mode: `MaxEncodedLen`)
	fn remove_vote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `2894`
		//  Estimated: `4365`
		// Minimum execution time: 176_517_000 picoseconds.
		Weight::from_parts(220_787_000, 0)
			.saturating_add(Weight::from_parts(0, 4365))
			.saturating_add(RocksDbWeight::get().reads(5))
			.saturating_add(RocksDbWeight::get().writes(2))
	}
	/// Storage: `CommunityReferenda::ReferendumInfoFor` (r:1 w:0)
	/// Proof: `CommunityReferenda::ReferendumInfoFor` (`max_values`: None, `max_size`: Some(900), added: 3375, mode: `MaxEncodedLen`)
	/// Storage: `Communities::CommunityVotes` (r:1 w:1)
	/// Proof: `Communities::CommunityVotes` (`max_values`: None, `max_size`: Some(103), added: 2578, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Freezes` (r:1 w:1)
	/// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(5682), added: 8157, mode: `MaxEncodedLen`)
	/// Storage: `System::Account` (r:1 w:1)
	/// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	/// Storage: `Balances::Locks` (r:1 w:0)
	/// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	fn unlock() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `1046`
		//  Estimated: `9147`
		// Minimum execution time: 128_897_000 picoseconds.
		Weight::from_parts(170_404_000, 0)
			.saturating_add(Weight::from_parts(0, 9147))
			.saturating_add(RocksDbWeight::get().reads(5))
			.saturating_add(RocksDbWeight::get().writes(3))
	}
	/// Storage: `Communities::Info` (r:1 w:0)
	/// Proof: `Communities::Info` (`max_values`: None, `max_size`: Some(19), added: 2494, mode: `MaxEncodedLen`)
	fn dispatch_as_account() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `115`
		//  Estimated: `3484`
		// Minimum execution time: 36_477_000 picoseconds.
		Weight::from_parts(48_974_000, 0)
			.saturating_add(Weight::from_parts(0, 3484))
			.saturating_add(RocksDbWeight::get().reads(1))
	}
}
