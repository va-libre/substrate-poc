[package]
name = "virto-node"
version = "0.5.2"
authors = ['Virto Team <contact@virto.team>']
license = "GPL-3.0-only"
homepage = 'https://github.com/virto-network/virto-node'
repository = 'https://github.com/virto-network/virto-node'
edition = "2021"

[[bin]]
name = "virto-node"
path = "src/main.rs"

[dependencies]
async-trait = { workspace = true }
clap = { workspace = true }
parity-scale-codec = { workspace = true }
futures = { workspace = true }
hex-literal = { workspace = true }
log = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }

# Local
virto-runtime = { workspace = true, optional = true }
kreivo-runtime = { workspace = true, optional = true }
jsonrpsee = { workspace = true, features = ["server"] }

# Substrate
frame-benchmarking = { workspace = true, features = ["std"] }
frame-benchmarking-cli = { workspace = true }
sp-runtime = { workspace = true }
sp-io = { workspace = true, features = ["std"] }
sp-core = { workspace = true, features = ["std"] }
sp-consensus = { workspace = true }
sp-session = { workspace = true, features = ["std"] }
sc-consensus = { workspace = true }
sc-cli = { workspace = true }
sc-client-api = { workspace = true }
sc-executor = { workspace = true }
sc-service = { workspace = true }
sc-telemetry = { workspace = true }
sc-transaction-pool = { workspace = true }
sp-transaction-pool = { workspace = true, features = ["std"] }
sc-network = { workspace = true }
sc-network-sync = { workspace = true }
sc-basic-authorship = { workspace = true }
sp-timestamp = { workspace = true, features = ["std"] }
sp-inherents = { workspace = true }
sp-blockchain = { workspace = true }
sp-block-builder = { workspace = true, features = ["std"] }
sp-keyring = { workspace = true }
sp-keystore = { workspace = true, features = ["std"] }
sc-chain-spec = { workspace = true }
sc-rpc = { workspace = true }
sc-tracing = { workspace = true }
sp-offchain = { workspace = true, features = ["std"] }
sp-api = { workspace = true, features = ["std"] }
sp-consensus-aura = { workspace = true, features = ["std"] }
sc-sysinfo = { workspace = true }
substrate-prometheus-endpoint = { workspace = true }
try-runtime-cli = { workspace = true, optional = true }
sc-transaction-pool-api = { workspace = true }
frame-system = { workspace = true }
frame-rpc-system = { workspace = true }
pallet-asset-tx-payment = { workspace = true }
pallet-transaction-payment-rpc = { workspace = true }
substrate-state-trie-migration-rpc = { workspace = true }

# Polkadot
polkadot-cli = { workspace = true }
polkadot-primitives = { workspace = true }
polkadot-service = { workspace = true }
xcm = { workspace = true, features = ["std"] }

# Cumulus
cumulus-client-cli = { workspace = true }
cumulus-client-collator = { workspace = true }
cumulus-client-consensus-aura = { workspace = true }
cumulus-client-consensus-relay-chain = { workspace = true }
cumulus-client-consensus-common = { workspace = true }
cumulus-client-consensus-proposer = { workspace = true }
cumulus-client-service = { workspace = true }
cumulus-client-network = { workspace = true }
cumulus-primitives-core = { workspace = true, features = ["std"] }
cumulus-primitives-parachain-inherent = { workspace = true }
cumulus-relay-chain-interface = { workspace = true }

parachains-common = { workspace = true }

[build-dependencies]
substrate-build-script-utils = { workspace = true }

[dev-dependencies]
assert_cmd = { workspace = true }
nix = { workspace = true }
tempfile = "3.3.0"
tokio = { workspace = true }
wait-timeout = { workspace = true }
# purge_chain_works works with rococo-local and needs to allow this
polkadot-cli = { workspace = true }

[features]
default = ["virto-runtime", "kreivo-runtime"]
runtime-benchmarks = [
	"virto-runtime?/runtime-benchmarks",
	"kreivo-runtime?/runtime-benchmarks",
	"polkadot-cli/runtime-benchmarks"
]
try-runtime = [
	"virto-runtime?/try-runtime",
	"kreivo-runtime?/try-runtime"
]
